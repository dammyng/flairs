// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: shared/models/appuser/proto/user.proto

package appuser

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type UserAccountType int32

const (
	User_PERSONAL UserAccountType = 0
	User_BUSINESS UserAccountType = 1
)

// Enum value maps for UserAccountType.
var (
	UserAccountType_name = map[int32]string{
		0: "PERSONAL",
		1: "BUSINESS",
	}
	UserAccountType_value = map[string]int32{
		"PERSONAL": 0,
		"BUSINESS": 1,
	}
)

func (x UserAccountType) Enum() *UserAccountType {
	p := new(UserAccountType)
	*p = x
	return p
}

func (x UserAccountType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (UserAccountType) Descriptor() protoreflect.EnumDescriptor {
	return file_shared_models_appuser_proto_user_proto_enumTypes[0].Descriptor()
}

func (UserAccountType) Type() protoreflect.EnumType {
	return &file_shared_models_appuser_proto_user_proto_enumTypes[0]
}

func (x UserAccountType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use UserAccountType.Descriptor instead.
func (UserAccountType) EnumDescriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{0, 0}
}

type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                 string          `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	FirstName          string          `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName           string          `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	DOB                string          `protobuf:"bytes,4,opt,name=DOB,proto3" json:"DOB,omitempty"`
	Gender             string          `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	BVN                string          `protobuf:"bytes,6,opt,name=BVN,proto3" json:"BVN,omitempty"`
	Address            string          `protobuf:"bytes,7,opt,name=address,proto3" json:"address,omitempty"`
	Street             string          `protobuf:"bytes,8,opt,name=street,proto3" json:"street,omitempty"`
	City               string          `protobuf:"bytes,9,opt,name=city,proto3" json:"city,omitempty"`
	PostalCode         string          `protobuf:"bytes,10,opt,name=postalCode,proto3" json:"postalCode,omitempty"`
	State              string          `protobuf:"bytes,11,opt,name=state,proto3" json:"state,omitempty"`
	Country            string          `protobuf:"bytes,12,opt,name=country,proto3" json:"country,omitempty"`
	CountryID          uint32          `protobuf:"varint,13,opt,name=countryID,proto3" json:"countryID,omitempty"`
	Photo              string          `protobuf:"bytes,900,opt,name=photo,proto3" json:"photo,omitempty"`
	Passport           string          `protobuf:"bytes,901,opt,name=passport,proto3" json:"passport,omitempty"`
	IDCard             string          `protobuf:"bytes,902,opt,name=IDCard,proto3" json:"IDCard,omitempty"`
	Referrer           string          `protobuf:"bytes,14,opt,name=referrer,proto3" json:"referrer,omitempty"`
	RefCode            string          `protobuf:"bytes,15,opt,name=refCode,proto3" json:"refCode,omitempty"`
	HowDidUHearAboutUs string          `protobuf:"bytes,16,opt,name=how_did_u_hear_about_us,json=howDidUHearAboutUs,proto3" json:"how_did_u_hear_about_us,omitempty"`
	UserName           string          `protobuf:"bytes,17,opt,name=userName,proto3" json:"userName,omitempty"`
	Email              string          `protobuf:"bytes,18,opt,name=email,proto3" json:"email,omitempty"`
	EmailVerifiedAt    string          `protobuf:"bytes,19,opt,name=emailVerifiedAt,proto3" json:"emailVerifiedAt,omitempty"`
	Password           []byte          `protobuf:"bytes,20,opt,name=password,proto3" json:"password,omitempty"`
	Pin                []byte          `protobuf:"bytes,21,opt,name=pin,proto3" json:"pin,omitempty"`
	PhoneNumber        string          `protobuf:"bytes,22,opt,name=phoneNumber,proto3" json:"phoneNumber,omitempty"`
	PhoneVerifiedAt    string          `protobuf:"bytes,23,opt,name=phoneVerifiedAt,proto3" json:"phoneVerifiedAt,omitempty"`
	ACCOUNT_TYPE       UserAccountType `protobuf:"varint,24,opt,name=ACCOUNT_TYPE,json=ACCOUNTTYPE,proto3,enum=appuser.UserAccountType" json:"ACCOUNT_TYPE,omitempty"`
	LastCardRequested  string          `protobuf:"bytes,25,opt,name=lastCardRequested,proto3" json:"lastCardRequested,omitempty"`
	IsProfileCompleted bool            `protobuf:"varint,26,opt,name=isProfileCompleted,proto3" json:"isProfileCompleted,omitempty"`
	Cards              string          `protobuf:"bytes,27,opt,name=cards,proto3" json:"cards,omitempty"`
	Wallets            string          `protobuf:"bytes,28,opt,name=wallets,proto3" json:"wallets,omitempty"`
	CreatedAt          string          `protobuf:"bytes,29,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt          string          `protobuf:"bytes,30,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{0}
}

func (x *User) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *User) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *User) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *User) GetDOB() string {
	if x != nil {
		return x.DOB
	}
	return ""
}

func (x *User) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *User) GetBVN() string {
	if x != nil {
		return x.BVN
	}
	return ""
}

func (x *User) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *User) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *User) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *User) GetPostalCode() string {
	if x != nil {
		return x.PostalCode
	}
	return ""
}

func (x *User) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *User) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *User) GetCountryID() uint32 {
	if x != nil {
		return x.CountryID
	}
	return 0
}

func (x *User) GetPhoto() string {
	if x != nil {
		return x.Photo
	}
	return ""
}

func (x *User) GetPassport() string {
	if x != nil {
		return x.Passport
	}
	return ""
}

func (x *User) GetIDCard() string {
	if x != nil {
		return x.IDCard
	}
	return ""
}

func (x *User) GetReferrer() string {
	if x != nil {
		return x.Referrer
	}
	return ""
}

func (x *User) GetRefCode() string {
	if x != nil {
		return x.RefCode
	}
	return ""
}

func (x *User) GetHowDidUHearAboutUs() string {
	if x != nil {
		return x.HowDidUHearAboutUs
	}
	return ""
}

func (x *User) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetEmailVerifiedAt() string {
	if x != nil {
		return x.EmailVerifiedAt
	}
	return ""
}

func (x *User) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *User) GetPin() []byte {
	if x != nil {
		return x.Pin
	}
	return nil
}

func (x *User) GetPhoneNumber() string {
	if x != nil {
		return x.PhoneNumber
	}
	return ""
}

func (x *User) GetPhoneVerifiedAt() string {
	if x != nil {
		return x.PhoneVerifiedAt
	}
	return ""
}

func (x *User) GetACCOUNT_TYPE() UserAccountType {
	if x != nil {
		return x.ACCOUNT_TYPE
	}
	return User_PERSONAL
}

func (x *User) GetLastCardRequested() string {
	if x != nil {
		return x.LastCardRequested
	}
	return ""
}

func (x *User) GetIsProfileCompleted() bool {
	if x != nil {
		return x.IsProfileCompleted
	}
	return false
}

func (x *User) GetCards() string {
	if x != nil {
		return x.Cards
	}
	return ""
}

func (x *User) GetWallets() string {
	if x != nil {
		return x.Wallets
	}
	return ""
}

func (x *User) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *User) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{1}
}

type Users struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*User `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *Users) Reset() {
	*x = Users{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Users) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Users) ProtoMessage() {}

func (x *Users) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Users.ProtoReflect.Descriptor instead.
func (*Users) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{2}
}

func (x *Users) GetResults() []*User {
	if x != nil {
		return x.Results
	}
	return nil
}

type UpdateArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OldUser *User `protobuf:"bytes,1,opt,name=oldUser,proto3" json:"oldUser,omitempty"`
	NewObj  *User `protobuf:"bytes,2,opt,name=newObj,proto3" json:"newObj,omitempty"`
}

func (x *UpdateArg) Reset() {
	*x = UpdateArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArg) ProtoMessage() {}

func (x *UpdateArg) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArg.ProtoReflect.Descriptor instead.
func (*UpdateArg) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateArg) GetOldUser() *User {
	if x != nil {
		return x.OldUser
	}
	return nil
}

func (x *UpdateArg) GetNewObj() *User {
	if x != nil {
		return x.NewObj
	}
	return nil
}

type UserArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserPayload *User `protobuf:"bytes,1,opt,name=userPayload,proto3" json:"userPayload,omitempty"`
}

func (x *UserArg) Reset() {
	*x = UserArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserArg) ProtoMessage() {}

func (x *UserArg) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserArg.ProtoReflect.Descriptor instead.
func (*UserArg) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{4}
}

func (x *UserArg) GetUserPayload() *User {
	if x != nil {
		return x.UserPayload
	}
	return nil
}

type CardRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId    string `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	Color     string `protobuf:"bytes,3,opt,name=color,proto3" json:"color,omitempty"`
	Currency  string `protobuf:"bytes,4,opt,name=currency,proto3" json:"currency,omitempty"`
	CreatedAt string `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt string `protobuf:"bytes,6,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *CardRequest) Reset() {
	*x = CardRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRequest) ProtoMessage() {}

func (x *CardRequest) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRequest.ProtoReflect.Descriptor instead.
func (*CardRequest) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{5}
}

func (x *CardRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *CardRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CardRequest) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

func (x *CardRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *CardRequest) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *CardRequest) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

type CardRequests struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*CardRequest `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *CardRequests) Reset() {
	*x = CardRequests{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CardRequests) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CardRequests) ProtoMessage() {}

func (x *CardRequests) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CardRequests.ProtoReflect.Descriptor instead.
func (*CardRequests) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{6}
}

func (x *CardRequests) GetResults() []*CardRequest {
	if x != nil {
		return x.Results
	}
	return nil
}

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId      string  `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	CustomerID  float64 `protobuf:"fixed64,3,opt,name=customerID,proto3" json:"customerID,omitempty"`
	AccountBal  string  `protobuf:"bytes,10,opt,name=accountBal,proto3" json:"accountBal,omitempty"`
	LedgerBal   string  `protobuf:"bytes,12,opt,name=ledgerBal,proto3" json:"ledgerBal,omitempty"`
	AccountType string  `protobuf:"bytes,6,opt,name=accountType,proto3" json:"accountType,omitempty"`
	WalletID    float64 `protobuf:"fixed64,7,opt,name=walletID,proto3" json:"walletID,omitempty"`
	WalletNo    string  `protobuf:"bytes,8,opt,name=walletNo,proto3" json:"walletNo,omitempty"`
	Currency    string  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	DateCreated string  `protobuf:"bytes,11,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{7}
}

func (x *Wallet) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Wallet) GetCustomerID() float64 {
	if x != nil {
		return x.CustomerID
	}
	return 0
}

func (x *Wallet) GetAccountBal() string {
	if x != nil {
		return x.AccountBal
	}
	return ""
}

func (x *Wallet) GetLedgerBal() string {
	if x != nil {
		return x.LedgerBal
	}
	return ""
}

func (x *Wallet) GetAccountType() string {
	if x != nil {
		return x.AccountType
	}
	return ""
}

func (x *Wallet) GetWalletID() float64 {
	if x != nil {
		return x.WalletID
	}
	return 0
}

func (x *Wallet) GetWalletNo() string {
	if x != nil {
		return x.WalletNo
	}
	return ""
}

func (x *Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Wallet) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

type Wallets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*Wallet `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
}

func (x *Wallets) Reset() {
	*x = Wallets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallets) ProtoMessage() {}

func (x *Wallets) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallets.ProtoReflect.Descriptor instead.
func (*Wallets) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{8}
}

func (x *Wallets) GetResults() []*Wallet {
	if x != nil {
		return x.Results
	}
	return nil
}

type WalletArg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string  `protobuf:"bytes,1,opt,name=userId,proto3" json:"userId,omitempty"`
	WalletId float64 `protobuf:"fixed64,3,opt,name=walletId,proto3" json:"walletId,omitempty"`
	Email    string  `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
}

func (x *WalletArg) Reset() {
	*x = WalletArg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_shared_models_appuser_proto_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletArg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletArg) ProtoMessage() {}

func (x *WalletArg) ProtoReflect() protoreflect.Message {
	mi := &file_shared_models_appuser_proto_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletArg.ProtoReflect.Descriptor instead.
func (*WalletArg) Descriptor() ([]byte, []int) {
	return file_shared_models_appuser_proto_user_proto_rawDescGZIP(), []int{9}
}

func (x *WalletArg) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *WalletArg) GetWalletId() float64 {
	if x != nil {
		return x.WalletId
	}
	return 0
}

func (x *WalletArg) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

var File_shared_models_appuser_proto_user_proto protoreflect.FileDescriptor

var file_shared_models_appuser_proto_user_proto_rawDesc = []byte{
	0x0a, 0x26, 0x73, 0x68, 0x61, 0x72, 0x65, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x22, 0x81, 0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x44, 0x4f, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x44, 0x4f, 0x42, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x42, 0x56, 0x4e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x42, 0x56, 0x4e,
	0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x72, 0x65, 0x65, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74,
	0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x49, 0x44, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x49, 0x44, 0x12, 0x15, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x18, 0x84, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x74, 0x6f, 0x12, 0x1b, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x85, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x70, 0x61, 0x73, 0x73, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x17, 0x0a, 0x06, 0x49, 0x44, 0x43, 0x61,
	0x72, 0x64, 0x18, 0x86, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x49, 0x44, 0x43, 0x61, 0x72,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x66, 0x65, 0x72, 0x72, 0x65, 0x72, 0x12, 0x18, 0x0a,
	0x07, 0x72, 0x65, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x72, 0x65, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x33, 0x0a, 0x17, 0x68, 0x6f, 0x77, 0x5f, 0x64,
	0x69, 0x64, 0x5f, 0x75, 0x5f, 0x68, 0x65, 0x61, 0x72, 0x5f, 0x61, 0x62, 0x6f, 0x75, 0x74, 0x5f,
	0x75, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x68, 0x6f, 0x77, 0x44, 0x69, 0x64,
	0x55, 0x48, 0x65, 0x61, 0x72, 0x41, 0x62, 0x6f, 0x75, 0x74, 0x55, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69,
	0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41,
	0x74, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73,
	0x77, 0x6f, 0x72, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x69, 0x6e, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x03, 0x70, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x70, 0x68, 0x6f, 0x6e,
	0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64, 0x41, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x3c, 0x0a, 0x0c, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0b, 0x41, 0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x54, 0x59, 0x50, 0x45,
	0x12, 0x2c, 0x0a, 0x11, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x61, 0x73,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x2e,
	0x0a, 0x12, 0x69, 0x73, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c,
	0x65, 0x74, 0x65, 0x64, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x63,
	0x61, 0x72, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x18,
	0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x29, 0x0a, 0x0b, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x45, 0x52,
	0x53, 0x4f, 0x4e, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x55, 0x53, 0x49, 0x4e,
	0x45, 0x53, 0x53, 0x10, 0x01, 0x22, 0x07, 0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x30,
	0x0a, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x27, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73,
	0x22, 0x5b, 0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x67, 0x12, 0x27, 0x0a,
	0x07, 0x6f, 0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d,
	0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x6f,
	0x6c, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x06, 0x6e, 0x65, 0x77, 0x4f, 0x62, 0x6a,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x06, 0x6e, 0x65, 0x77, 0x4f, 0x62, 0x6a, 0x22, 0x3a, 0x0a,
	0x07, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72, 0x67, 0x12, 0x2f, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72,
	0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x0b, 0x75, 0x73,
	0x65, 0x72, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0xa3, 0x01, 0x0a, 0x0b, 0x43, 0x61,
	0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65,
	0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22,
	0x3e, 0x0a, 0x0c, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12,
	0x2e, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22,
	0x96, 0x02, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72, 0x49, 0x44,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x0a, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x65, 0x72,
	0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42,
	0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6c,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x44, 0x12, 0x1a,
	0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x4e, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x61, 0x74,
	0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x22, 0x34, 0x0a, 0x07, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x22, 0x55,
	0x0a, 0x09, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x72, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x08, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x32, 0x90, 0x05, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x41, 0x6c, 0x6c, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x0e, 0x4e, 0x65, 0x77, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e,
	0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70,
	0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x09, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74,
	0x12, 0x0f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x22, 0x00, 0x12, 0x2f, 0x0a, 0x09, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72,
	0x73, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0a, 0x46, 0x69, 0x6e, 0x64, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x0f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x1a, 0x0f, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x22, 0x00, 0x12, 0x35, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x57,
	0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x12, 0x12, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x41, 0x72, 0x67, 0x1a, 0x10, 0x2e, 0x61, 0x70, 0x70,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x73, 0x22, 0x00, 0x12, 0x3f,
	0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x64,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x14, 0x46, 0x69, 0x6e, 0x64, 0x55, 0x73, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x12, 0x14, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x73, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x41, 0x72, 0x67, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x22, 0x00, 0x12, 0x2c, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x10, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x41, 0x72,
	0x67, 0x1a, 0x0d, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x22, 0x00, 0x12, 0x32, 0x0a, 0x0a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x12, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x67, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x45,
	0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x30, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x12, 0x10, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55,
	0x73, 0x65, 0x72, 0x41, 0x72, 0x67, 0x1a, 0x0e, 0x2e, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x17, 0x5a, 0x15, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x64, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x2f, 0x61, 0x70, 0x70, 0x75, 0x73, 0x65,
	0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_shared_models_appuser_proto_user_proto_rawDescOnce sync.Once
	file_shared_models_appuser_proto_user_proto_rawDescData = file_shared_models_appuser_proto_user_proto_rawDesc
)

func file_shared_models_appuser_proto_user_proto_rawDescGZIP() []byte {
	file_shared_models_appuser_proto_user_proto_rawDescOnce.Do(func() {
		file_shared_models_appuser_proto_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_shared_models_appuser_proto_user_proto_rawDescData)
	})
	return file_shared_models_appuser_proto_user_proto_rawDescData
}

var file_shared_models_appuser_proto_user_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_shared_models_appuser_proto_user_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_shared_models_appuser_proto_user_proto_goTypes = []interface{}{
	(UserAccountType)(0), // 0: appuser.User.accountType
	(*User)(nil),         // 1: appuser.User
	(*Empty)(nil),        // 2: appuser.Empty
	(*Users)(nil),        // 3: appuser.Users
	(*UpdateArg)(nil),    // 4: appuser.UpdateArg
	(*UserArg)(nil),      // 5: appuser.UserArg
	(*CardRequest)(nil),  // 6: appuser.CardRequest
	(*CardRequests)(nil), // 7: appuser.CardRequests
	(*Wallet)(nil),       // 8: appuser.Wallet
	(*Wallets)(nil),      // 9: appuser.Wallets
	(*WalletArg)(nil),    // 10: appuser.WalletArg
}
var file_shared_models_appuser_proto_user_proto_depIdxs = []int32{
	0,  // 0: appuser.User.ACCOUNT_TYPE:type_name -> appuser.User.accountType
	1,  // 1: appuser.Users.results:type_name -> appuser.User
	1,  // 2: appuser.UpdateArg.oldUser:type_name -> appuser.User
	1,  // 3: appuser.UpdateArg.newObj:type_name -> appuser.User
	1,  // 4: appuser.UserArg.userPayload:type_name -> appuser.User
	6,  // 5: appuser.CardRequests.results:type_name -> appuser.CardRequest
	8,  // 6: appuser.Wallets.results:type_name -> appuser.Wallet
	2,  // 7: appuser.UserService.AllUsers:input_type -> appuser.Empty
	6,  // 8: appuser.UserService.NewCardRequest:input_type -> appuser.CardRequest
	8,  // 9: appuser.UserService.NewWallet:input_type -> appuser.Wallet
	5,  // 10: appuser.UserService.FindUsers:input_type -> appuser.UserArg
	8,  // 11: appuser.UserService.FindWallet:input_type -> appuser.Wallet
	10, // 12: appuser.UserService.UserWallets:input_type -> appuser.WalletArg
	6,  // 13: appuser.UserService.FindCardRequest:input_type -> appuser.CardRequest
	6,  // 14: appuser.UserService.FindUserCardRequests:input_type -> appuser.CardRequest
	5,  // 15: appuser.UserService.GetUser:input_type -> appuser.UserArg
	5,  // 16: appuser.UserService.AddUser:input_type -> appuser.UserArg
	4,  // 17: appuser.UserService.UpdateUser:input_type -> appuser.UpdateArg
	5,  // 18: appuser.UserService.DeleteUser:input_type -> appuser.UserArg
	3,  // 19: appuser.UserService.AllUsers:output_type -> appuser.Users
	6,  // 20: appuser.UserService.NewCardRequest:output_type -> appuser.CardRequest
	8,  // 21: appuser.UserService.NewWallet:output_type -> appuser.Wallet
	3,  // 22: appuser.UserService.FindUsers:output_type -> appuser.Users
	8,  // 23: appuser.UserService.FindWallet:output_type -> appuser.Wallet
	9,  // 24: appuser.UserService.UserWallets:output_type -> appuser.Wallets
	6,  // 25: appuser.UserService.FindCardRequest:output_type -> appuser.CardRequest
	7,  // 26: appuser.UserService.FindUserCardRequests:output_type -> appuser.CardRequests
	1,  // 27: appuser.UserService.GetUser:output_type -> appuser.User
	1,  // 28: appuser.UserService.AddUser:output_type -> appuser.User
	2,  // 29: appuser.UserService.UpdateUser:output_type -> appuser.Empty
	2,  // 30: appuser.UserService.DeleteUser:output_type -> appuser.Empty
	19, // [19:31] is the sub-list for method output_type
	7,  // [7:19] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_shared_models_appuser_proto_user_proto_init() }
func file_shared_models_appuser_proto_user_proto_init() {
	if File_shared_models_appuser_proto_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_shared_models_appuser_proto_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Users); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CardRequests); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_shared_models_appuser_proto_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletArg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_shared_models_appuser_proto_user_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_shared_models_appuser_proto_user_proto_goTypes,
		DependencyIndexes: file_shared_models_appuser_proto_user_proto_depIdxs,
		EnumInfos:         file_shared_models_appuser_proto_user_proto_enumTypes,
		MessageInfos:      file_shared_models_appuser_proto_user_proto_msgTypes,
	}.Build()
	File_shared_models_appuser_proto_user_proto = out.File
	file_shared_models_appuser_proto_user_proto_rawDesc = nil
	file_shared_models_appuser_proto_user_proto_goTypes = nil
	file_shared_models_appuser_proto_user_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// UserServiceClient is the client API for UserService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type UserServiceClient interface {
	AllUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Users, error)
	NewCardRequest(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (*CardRequest, error)
	NewWallet(ctx context.Context, in *Wallet, opts ...grpc.CallOption) (*Wallet, error)
	FindUsers(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*Users, error)
	FindWallet(ctx context.Context, in *Wallet, opts ...grpc.CallOption) (*Wallet, error)
	UserWallets(ctx context.Context, in *WalletArg, opts ...grpc.CallOption) (*Wallets, error)
	FindCardRequest(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (*CardRequest, error)
	FindUserCardRequests(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (*CardRequests, error)
	GetUser(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*User, error)
	AddUser(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*User, error)
	UpdateUser(ctx context.Context, in *UpdateArg, opts ...grpc.CallOption) (*Empty, error)
	DeleteUser(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*Empty, error)
}

type userServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewUserServiceClient(cc grpc.ClientConnInterface) UserServiceClient {
	return &userServiceClient{cc}
}

func (c *userServiceClient) AllUsers(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/appuser.UserService/AllUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) NewCardRequest(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (*CardRequest, error) {
	out := new(CardRequest)
	err := c.cc.Invoke(ctx, "/appuser.UserService/NewCardRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) NewWallet(ctx context.Context, in *Wallet, opts ...grpc.CallOption) (*Wallet, error) {
	out := new(Wallet)
	err := c.cc.Invoke(ctx, "/appuser.UserService/NewWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindUsers(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*Users, error) {
	out := new(Users)
	err := c.cc.Invoke(ctx, "/appuser.UserService/FindUsers", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindWallet(ctx context.Context, in *Wallet, opts ...grpc.CallOption) (*Wallet, error) {
	out := new(Wallet)
	err := c.cc.Invoke(ctx, "/appuser.UserService/FindWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UserWallets(ctx context.Context, in *WalletArg, opts ...grpc.CallOption) (*Wallets, error) {
	out := new(Wallets)
	err := c.cc.Invoke(ctx, "/appuser.UserService/UserWallets", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindCardRequest(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (*CardRequest, error) {
	out := new(CardRequest)
	err := c.cc.Invoke(ctx, "/appuser.UserService/FindCardRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) FindUserCardRequests(ctx context.Context, in *CardRequest, opts ...grpc.CallOption) (*CardRequests, error) {
	out := new(CardRequests)
	err := c.cc.Invoke(ctx, "/appuser.UserService/FindUserCardRequests", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) GetUser(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/appuser.UserService/GetUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) AddUser(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/appuser.UserService/AddUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) UpdateUser(ctx context.Context, in *UpdateArg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/appuser.UserService/UpdateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userServiceClient) DeleteUser(ctx context.Context, in *UserArg, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/appuser.UserService/DeleteUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// UserServiceServer is the server API for UserService service.
type UserServiceServer interface {
	AllUsers(context.Context, *Empty) (*Users, error)
	NewCardRequest(context.Context, *CardRequest) (*CardRequest, error)
	NewWallet(context.Context, *Wallet) (*Wallet, error)
	FindUsers(context.Context, *UserArg) (*Users, error)
	FindWallet(context.Context, *Wallet) (*Wallet, error)
	UserWallets(context.Context, *WalletArg) (*Wallets, error)
	FindCardRequest(context.Context, *CardRequest) (*CardRequest, error)
	FindUserCardRequests(context.Context, *CardRequest) (*CardRequests, error)
	GetUser(context.Context, *UserArg) (*User, error)
	AddUser(context.Context, *UserArg) (*User, error)
	UpdateUser(context.Context, *UpdateArg) (*Empty, error)
	DeleteUser(context.Context, *UserArg) (*Empty, error)
}

// UnimplementedUserServiceServer can be embedded to have forward compatible implementations.
type UnimplementedUserServiceServer struct {
}

func (*UnimplementedUserServiceServer) AllUsers(context.Context, *Empty) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AllUsers not implemented")
}
func (*UnimplementedUserServiceServer) NewCardRequest(context.Context, *CardRequest) (*CardRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewCardRequest not implemented")
}
func (*UnimplementedUserServiceServer) NewWallet(context.Context, *Wallet) (*Wallet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewWallet not implemented")
}
func (*UnimplementedUserServiceServer) FindUsers(context.Context, *UserArg) (*Users, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUsers not implemented")
}
func (*UnimplementedUserServiceServer) FindWallet(context.Context, *Wallet) (*Wallet, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindWallet not implemented")
}
func (*UnimplementedUserServiceServer) UserWallets(context.Context, *WalletArg) (*Wallets, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UserWallets not implemented")
}
func (*UnimplementedUserServiceServer) FindCardRequest(context.Context, *CardRequest) (*CardRequest, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindCardRequest not implemented")
}
func (*UnimplementedUserServiceServer) FindUserCardRequests(context.Context, *CardRequest) (*CardRequests, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindUserCardRequests not implemented")
}
func (*UnimplementedUserServiceServer) GetUser(context.Context, *UserArg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedUserServiceServer) AddUser(context.Context, *UserArg) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddUser not implemented")
}
func (*UnimplementedUserServiceServer) UpdateUser(context.Context, *UpdateArg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedUserServiceServer) DeleteUser(context.Context, *UserArg) (*Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteUser not implemented")
}

func RegisterUserServiceServer(s *grpc.Server, srv UserServiceServer) {
	s.RegisterService(&_UserService_serviceDesc, srv)
}

func _UserService_AllUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AllUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/AllUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AllUsers(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_NewCardRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).NewCardRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/NewCardRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).NewCardRequest(ctx, req.(*CardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_NewWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Wallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).NewWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/NewWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).NewWallet(ctx, req.(*Wallet))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindUsers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindUsers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/FindUsers",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindUsers(ctx, req.(*UserArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Wallet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/FindWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindWallet(ctx, req.(*Wallet))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UserWallets_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WalletArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UserWallets(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/UserWallets",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UserWallets(ctx, req.(*WalletArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindCardRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindCardRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/FindCardRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindCardRequest(ctx, req.(*CardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_FindUserCardRequests_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).FindUserCardRequests(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/FindUserCardRequests",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).FindUserCardRequests(ctx, req.(*CardRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).GetUser(ctx, req.(*UserArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_AddUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).AddUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/AddUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).AddUser(ctx, req.(*UserArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).UpdateUser(ctx, req.(*UpdateArg))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserService_DeleteUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserArg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserServiceServer).DeleteUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/appuser.UserService/DeleteUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserServiceServer).DeleteUser(ctx, req.(*UserArg))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "appuser.UserService",
	HandlerType: (*UserServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AllUsers",
			Handler:    _UserService_AllUsers_Handler,
		},
		{
			MethodName: "NewCardRequest",
			Handler:    _UserService_NewCardRequest_Handler,
		},
		{
			MethodName: "NewWallet",
			Handler:    _UserService_NewWallet_Handler,
		},
		{
			MethodName: "FindUsers",
			Handler:    _UserService_FindUsers_Handler,
		},
		{
			MethodName: "FindWallet",
			Handler:    _UserService_FindWallet_Handler,
		},
		{
			MethodName: "UserWallets",
			Handler:    _UserService_UserWallets_Handler,
		},
		{
			MethodName: "FindCardRequest",
			Handler:    _UserService_FindCardRequest_Handler,
		},
		{
			MethodName: "FindUserCardRequests",
			Handler:    _UserService_FindUserCardRequests_Handler,
		},
		{
			MethodName: "GetUser",
			Handler:    _UserService_GetUser_Handler,
		},
		{
			MethodName: "AddUser",
			Handler:    _UserService_AddUser_Handler,
		},
		{
			MethodName: "UpdateUser",
			Handler:    _UserService_UpdateUser_Handler,
		},
		{
			MethodName: "DeleteUser",
			Handler:    _UserService_DeleteUser_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "shared/models/appuser/proto/user.proto",
}
