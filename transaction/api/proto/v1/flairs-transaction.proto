syntax = "proto3";
package v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Flairs service";
        version: "1.0";
		contact: {
			name: "flairs mobile banking system";
			url: "http://www.alphaplus.finance/";
			email: "dammydarmy@gmail.com";
        };
    };
    host:"localhost:9000";
    schemes: [HTTP, HTTPS];
    consumes: "application/json";
    produces: "application/json";
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
    }
    security_definitions: {
           security:{
            key:"flairs_token" 
            value{
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, passed into header"
              }
           }
    }
    security: {
        security_requirement: {
          key: "flairs_token"
        }
      }
};

message Transaction{
    string ID =1;
    double amount = 4;
    string memo=5;
    string walletId =8;
    string status =2;
    string currency =6;
    string txRef =3;
    string customerId=11;
    string createdAt= 14;
    string updatedAt= 9;
    string source = 21;
    enum type {
        CREDIT =0;
        DEBIT=1;
    };
    type transType = 19;
}

message NewTransactionReq{
    double amount = 4;
    string memo=5;
    string walletId =8;
    string status =2;
    string currency =6;
    string txRef =3;
    string customerId=11;
    string createdAt= 14;
    string updatedAt= 9;
    string source = 21;
    enum type {
        CREDIT =0;
        DEBIT=1;
    };
    type transType = 19;
}


message newTransactionRes{
    string id = 4;
}


message getTransactionRequest{
    string id = 1;
}

message getWalletTransactionsRequest{
    string walletId = 1;
}

message updateTransactionResponse{
    string id = 1;
}

message updateTransactionsRequest{
    string id = 1;
    string key = 2;
    string status = 3;
    string txRef =4;
}

message getMyTransactionsRequest{
    string userId = 3;
}

message TransactionsResponse{
    repeated Transaction transactions = 3;
}

message WalletBalanceResponse{
    repeated Transaction transactions = 3;
    double Balance = 1;
}

message TransactionResponse{
    Transaction transaction = 3;
}

message TfDepositeRequest{
    string txRef = 3;
    string walletId = 2;
}

message TransferRequest{
    string FromWalletId = 3;
    string ToWalletId = 2;
    float Amount = 1;
}
message TransactResponse{
    float amount = 3;
}
service FlairsTransactionService{

         // Create a new transaction
         rpc AddNewTransaction (NewTransactionReq) returns (newTransactionRes){
            option (google.api.http)={
                post: "/v1/transaction"
                body:"*"
            };
        }

        // Get wallets beloging to a particular user 
       rpc GetTransaction (getTransactionRequest) returns (TransactionResponse){
        option (google.api.http)={
            get: "/v1/transactions/{id}"
        };
    }

      //update a certain transaction 
      rpc UpdateTransaction (updateTransactionsRequest) returns (updateTransactionResponse){
        option (google.api.http)={
            put: "/v1/transaction/{id}"
        };
    }

         // Get wallets beloging to a particular user 
       rpc GetMyTransactions (getMyTransactionsRequest) returns (TransactionsResponse){
        option (google.api.http)={
            get: "/v1/transactions/u/{userId}"
        };
    }

       // Get wallets beloging to a particular user 
       rpc GetWalletTransactions (getWalletTransactionsRequest) returns (WalletBalanceResponse){
        option (google.api.http)={
            get: "/v1/transactions/w/{walletId}"
        };
    }

     // Get wallets beloging to a particular user 
     rpc TransactFtDeposite (TfDepositeRequest) returns (TransactResponse){
        option (google.api.http)={
            post: "/v1/transactions/transact-ft-deposite"
            body:"*"

        };
    }

     // Get wallets beloging to a particular user 
     rpc TransactWalletTransfer (TransferRequest) returns (TransactResponse){
        option (google.api.http)={
            post: "/v1/transactions/transact-wallet-transfer"
            body:"*"

        };
    }
}