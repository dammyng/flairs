syntax = "proto3";
package v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-swagger/options/annotations.proto";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
	info: {
		title: "Flairs service";
        version: "1.0";
		contact: {
			name: "flairs mobile banking system";
			url: "http://www.alphaplus.finance/";
			email: "dammydarmy@gmail.com";
        };
    };
    host:"localhost:9000";
    schemes: [HTTP, HTTPS];
    consumes: "application/json";
    produces: "application/json";
    responses: {
		key: "404";
		value: {
			description: "Returned when the resource does not exist.";
			schema: {
				json_schema: {
					type: STRING;
				}
			}
		}
    }
    security_definitions: {
           security:{
            key:"flairs_token" 
            value{
                type: TYPE_API_KEY
                in: IN_HEADER
                name: "Authorization"
                description: "Authentication token, passed into header"
              }
           }
    }
};

message Transaction{
    string ID =1;
    string amount = 4;
    string memo=5;
    string message = 12;
    string walletId =8;
    string status =2;
    string currency =6;
    string txRef =3;
    string flwRef=7;
    string customer=10;
    string customerId=11;
    string paymentType = 13;
    string createdAt= 14;
    string deletedAt= 17;
    string updatedAt= 9;
    string cardLastFourDigit= 15;
    string cardType= 16;
    enum type {
        EXPENSE =0;
        INCOME=1;
    };
    enum class {
        Fund =0;
        Transfer=1;
    };
}


message newTransactionReq{
    string t_ID = 4;
    string walletID = 1;
    string toID = 7;
    string userId = 3;
    double amount = 6;
    enum class {
        Fund =0;
        Transfer=1;
    };
    class transactionType = 5;

}

message newTransactionRes{
    string ID = 4;
}


message getMyTransactionsRequest{
    string userId = 3;
}

message TransactionsResponse{
    repeated Transaction transactions = 3;
}

service FlairsTransactionService{

         // Create a new transaction
         rpc AddnewTransaction (newTransactionReq) returns (newTransactionRes){
            option (google.api.http)={
                post: "/v1/transaction"
                body:"*"
            };
        }

         // Get wallets beloging to a particular user 
       rpc GetMyTransactions (getMyTransactionsRequest) returns (TransactionsResponse){
        option (google.api.http)={
            get: "/v1/transaction/{userId}"
        };
    }
}