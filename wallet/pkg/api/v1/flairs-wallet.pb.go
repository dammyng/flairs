// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.4
// source: flairs-wallet.proto

package v1

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Wallet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID            string  `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserId        string  `protobuf:"bytes,2,opt,name=userId,proto3" json:"userId,omitempty"`
	AccountBal    float32 `protobuf:"fixed32,10,opt,name=accountBal,proto3" json:"accountBal,omitempty"`
	LedgerBal     float32 `protobuf:"fixed32,12,opt,name=ledgerBal,proto3" json:"ledgerBal,omitempty"`
	WalletType    string  `protobuf:"bytes,6,opt,name=walletType,proto3" json:"walletType,omitempty"`
	Memo          string  `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo,omitempty"`
	TermID        string  `protobuf:"bytes,5,opt,name=termID,proto3" json:"termID,omitempty"`
	Name          string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	Status        bool    `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"`
	Currency      string  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	DateCreated   string  `protobuf:"bytes,11,opt,name=dateCreated,proto3" json:"dateCreated,omitempty"`
	DateBalUpdate string  `protobuf:"bytes,4,opt,name=dateBalUpdate,proto3" json:"dateBalUpdate,omitempty"`
	LastUpdate    string  `protobuf:"bytes,13,opt,name=lastUpdate,proto3" json:"lastUpdate,omitempty"`
}

func (x *Wallet) Reset() {
	*x = Wallet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flairs_wallet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Wallet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Wallet) ProtoMessage() {}

func (x *Wallet) ProtoReflect() protoreflect.Message {
	mi := &file_flairs_wallet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Wallet.ProtoReflect.Descriptor instead.
func (*Wallet) Descriptor() ([]byte, []int) {
	return file_flairs_wallet_proto_rawDescGZIP(), []int{0}
}

func (x *Wallet) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *Wallet) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Wallet) GetAccountBal() float32 {
	if x != nil {
		return x.AccountBal
	}
	return 0
}

func (x *Wallet) GetLedgerBal() float32 {
	if x != nil {
		return x.LedgerBal
	}
	return 0
}

func (x *Wallet) GetWalletType() string {
	if x != nil {
		return x.WalletType
	}
	return ""
}

func (x *Wallet) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *Wallet) GetTermID() string {
	if x != nil {
		return x.TermID
	}
	return ""
}

func (x *Wallet) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Wallet) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

func (x *Wallet) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *Wallet) GetDateCreated() string {
	if x != nil {
		return x.DateCreated
	}
	return ""
}

func (x *Wallet) GetDateBalUpdate() string {
	if x != nil {
		return x.DateBalUpdate
	}
	return ""
}

func (x *Wallet) GetLastUpdate() string {
	if x != nil {
		return x.LastUpdate
	}
	return ""
}

type WalletTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	WithdrawDay string `protobuf:"bytes,2,opt,name=withdrawDay,proto3" json:"withdrawDay,omitempty"`
}

func (x *WalletTerms) Reset() {
	*x = WalletTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flairs_wallet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletTerms) ProtoMessage() {}

func (x *WalletTerms) ProtoReflect() protoreflect.Message {
	mi := &file_flairs_wallet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletTerms.ProtoReflect.Descriptor instead.
func (*WalletTerms) Descriptor() ([]byte, []int) {
	return file_flairs_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *WalletTerms) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WalletTerms) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WalletTerms) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WalletTerms) GetWithdrawDay() string {
	if x != nil {
		return x.WithdrawDay
	}
	return ""
}

type WalletType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          int32  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
}

func (x *WalletType) Reset() {
	*x = WalletType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flairs_wallet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletType) ProtoMessage() {}

func (x *WalletType) ProtoReflect() protoreflect.Message {
	mi := &file_flairs_wallet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletType.ProtoReflect.Descriptor instead.
func (*WalletType) Descriptor() ([]byte, []int) {
	return file_flairs_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *WalletType) GetID() int32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *WalletType) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WalletType) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

type NewWalletRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string  `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`
	UserID     string  `protobuf:"bytes,2,opt,name=userID,proto3" json:"userID,omitempty"`
	WalletType string  `protobuf:"bytes,6,opt,name=walletType,proto3" json:"walletType,omitempty"`
	Currency   string  `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	Memo       string  `protobuf:"bytes,8,opt,name=memo,proto3" json:"memo,omitempty"`
	AccountBal float32 `protobuf:"fixed32,10,opt,name=accountBal,proto3" json:"accountBal,omitempty"`
	LedgerBal  float32 `protobuf:"fixed32,12,opt,name=ledgerBal,proto3" json:"ledgerBal,omitempty"`
}

func (x *NewWalletRequest) Reset() {
	*x = NewWalletRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flairs_wallet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewWalletRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewWalletRequest) ProtoMessage() {}

func (x *NewWalletRequest) ProtoReflect() protoreflect.Message {
	mi := &file_flairs_wallet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewWalletRequest.ProtoReflect.Descriptor instead.
func (*NewWalletRequest) Descriptor() ([]byte, []int) {
	return file_flairs_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *NewWalletRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewWalletRequest) GetUserID() string {
	if x != nil {
		return x.UserID
	}
	return ""
}

func (x *NewWalletRequest) GetWalletType() string {
	if x != nil {
		return x.WalletType
	}
	return ""
}

func (x *NewWalletRequest) GetCurrency() string {
	if x != nil {
		return x.Currency
	}
	return ""
}

func (x *NewWalletRequest) GetMemo() string {
	if x != nil {
		return x.Memo
	}
	return ""
}

func (x *NewWalletRequest) GetAccountBal() float32 {
	if x != nil {
		return x.AccountBal
	}
	return 0
}

func (x *NewWalletRequest) GetLedgerBal() float32 {
	if x != nil {
		return x.LedgerBal
	}
	return 0
}

type AddWalletResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID string `protobuf:"bytes,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *AddWalletResponse) Reset() {
	*x = AddWalletResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_flairs_wallet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddWalletResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddWalletResponse) ProtoMessage() {}

func (x *AddWalletResponse) ProtoReflect() protoreflect.Message {
	mi := &file_flairs_wallet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddWalletResponse.ProtoReflect.Descriptor instead.
func (*AddWalletResponse) Descriptor() ([]byte, []int) {
	return file_flairs_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *AddWalletResponse) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

var File_flairs_wallet_proto protoreflect.FileDescriptor

var file_flairs_wallet_proto_rawDesc = []byte{
	0x0a, 0x13, 0x66, 0x6c, 0x61, 0x69, 0x72, 0x73, 0x2d, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02, 0x76, 0x31, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x73, 0x77, 0x61, 0x67, 0x67, 0x65, 0x72, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xea, 0x02, 0x0a, 0x06, 0x57, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0a, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x64,
	0x67, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x74,
	0x65, 0x72, 0x6d, 0x49, 0x44, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x74, 0x65, 0x72,
	0x6d, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x64,
	0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x64, 0x61, 0x74, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x61, 0x74, 0x65, 0x42, 0x61, 0x6c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x22, 0x75, 0x0a, 0x0b, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x77,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x44, 0x61, 0x79, 0x22, 0x52, 0x0a, 0x0a, 0x57, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xcc,
	0x01, 0x0a, 0x10, 0x6e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6d,
	0x65, 0x6d, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x65, 0x6d, 0x6f, 0x12,
	0x1e, 0x0a, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x42, 0x61, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x09, 0x6c, 0x65, 0x64, 0x67, 0x65, 0x72, 0x42, 0x61, 0x6c, 0x22, 0x23, 0x0a,
	0x11, 0x61, 0x64, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x49, 0x44, 0x32, 0x63, 0x0a, 0x0d, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x52, 0x0a, 0x0c, 0x41, 0x64, 0x64, 0x4e, 0x65, 0x77, 0x57, 0x61, 0x6c,
	0x6c, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x76, 0x31, 0x2e, 0x6e, 0x65, 0x77, 0x57, 0x61, 0x6c, 0x6c,
	0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x76, 0x31, 0x2e, 0x61,
	0x64, 0x64, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x15, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0f, 0x22, 0x0a, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x61,
	0x6c, 0x6c, 0x65, 0x74, 0x3a, 0x01, 0x2a, 0x42, 0xb6, 0x02, 0x92, 0x41, 0xb2, 0x02, 0x12, 0x6a,
	0x0a, 0x0e, 0x46, 0x6c, 0x61, 0x69, 0x72, 0x73, 0x20, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x22, 0x53, 0x0a, 0x1c, 0x66, 0x6c, 0x61, 0x69, 0x72, 0x73, 0x20, 0x6d, 0x6f, 0x62, 0x69, 0x6c,
	0x65, 0x20, 0x62, 0x61, 0x6e, 0x6b, 0x69, 0x6e, 0x67, 0x20, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x12, 0x1d, 0x68, 0x74, 0x74, 0x70, 0x3a, 0x2f, 0x2f, 0x77, 0x77, 0x77, 0x2e, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x70, 0x6c, 0x75, 0x73, 0x2e, 0x66, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x2f, 0x1a,
	0x14, 0x64, 0x61, 0x6d, 0x6d, 0x79, 0x64, 0x61, 0x72, 0x6d, 0x79, 0x40, 0x67, 0x6d, 0x61, 0x69,
	0x6c, 0x2e, 0x63, 0x6f, 0x6d, 0x32, 0x03, 0x31, 0x2e, 0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x39, 0x30, 0x30, 0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e,
	0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73,
	0x6f, 0x6e, 0x52, 0x3b, 0x0a, 0x03, 0x34, 0x30, 0x34, 0x12, 0x34, 0x0a, 0x2a, 0x52, 0x65, 0x74,
	0x75, 0x72, 0x6e, 0x65, 0x64, 0x20, 0x77, 0x68, 0x65, 0x6e, 0x20, 0x74, 0x68, 0x65, 0x20, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x20, 0x64, 0x6f, 0x65, 0x73, 0x20, 0x6e, 0x6f, 0x74,
	0x20, 0x65, 0x78, 0x69, 0x73, 0x74, 0x2e, 0x12, 0x06, 0x0a, 0x04, 0x9a, 0x02, 0x01, 0x07, 0x5a,
	0x4f, 0x0a, 0x4d, 0x0a, 0x0c, 0x66, 0x6c, 0x61, 0x69, 0x72, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x3d, 0x08, 0x02, 0x12, 0x28, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x2c, 0x20, 0x70, 0x61, 0x73,
	0x73, 0x65, 0x64, 0x20, 0x69, 0x6e, 0x74, 0x6f, 0x20, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x1a,
	0x0d, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x20, 0x02,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_flairs_wallet_proto_rawDescOnce sync.Once
	file_flairs_wallet_proto_rawDescData = file_flairs_wallet_proto_rawDesc
)

func file_flairs_wallet_proto_rawDescGZIP() []byte {
	file_flairs_wallet_proto_rawDescOnce.Do(func() {
		file_flairs_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(file_flairs_wallet_proto_rawDescData)
	})
	return file_flairs_wallet_proto_rawDescData
}

var file_flairs_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_flairs_wallet_proto_goTypes = []interface{}{
	(*Wallet)(nil),            // 0: v1.Wallet
	(*WalletTerms)(nil),       // 1: v1.WalletTerms
	(*WalletType)(nil),        // 2: v1.WalletType
	(*NewWalletRequest)(nil),  // 3: v1.newWalletRequest
	(*AddWalletResponse)(nil), // 4: v1.addWalletResponse
}
var file_flairs_wallet_proto_depIdxs = []int32{
	3, // 0: v1.WalletService.AddNewWallet:input_type -> v1.newWalletRequest
	4, // 1: v1.WalletService.AddNewWallet:output_type -> v1.addWalletResponse
	1, // [1:2] is the sub-list for method output_type
	0, // [0:1] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_flairs_wallet_proto_init() }
func file_flairs_wallet_proto_init() {
	if File_flairs_wallet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_flairs_wallet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Wallet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flairs_wallet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flairs_wallet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flairs_wallet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewWalletRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_flairs_wallet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddWalletResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_flairs_wallet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_flairs_wallet_proto_goTypes,
		DependencyIndexes: file_flairs_wallet_proto_depIdxs,
		MessageInfos:      file_flairs_wallet_proto_msgTypes,
	}.Build()
	File_flairs_wallet_proto = out.File
	file_flairs_wallet_proto_rawDesc = nil
	file_flairs_wallet_proto_goTypes = nil
	file_flairs_wallet_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WalletServiceClient is the client API for WalletService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WalletServiceClient interface {
	// Create a new wallet
	AddNewWallet(ctx context.Context, in *NewWalletRequest, opts ...grpc.CallOption) (*AddWalletResponse, error)
}

type walletServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWalletServiceClient(cc grpc.ClientConnInterface) WalletServiceClient {
	return &walletServiceClient{cc}
}

func (c *walletServiceClient) AddNewWallet(ctx context.Context, in *NewWalletRequest, opts ...grpc.CallOption) (*AddWalletResponse, error) {
	out := new(AddWalletResponse)
	err := c.cc.Invoke(ctx, "/v1.WalletService/AddNewWallet", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WalletServiceServer is the server API for WalletService service.
type WalletServiceServer interface {
	// Create a new wallet
	AddNewWallet(context.Context, *NewWalletRequest) (*AddWalletResponse, error)
}

// UnimplementedWalletServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWalletServiceServer struct {
}

func (*UnimplementedWalletServiceServer) AddNewWallet(context.Context, *NewWalletRequest) (*AddWalletResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddNewWallet not implemented")
}

func RegisterWalletServiceServer(s *grpc.Server, srv WalletServiceServer) {
	s.RegisterService(&_WalletService_serviceDesc, srv)
}

func _WalletService_AddNewWallet_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewWalletRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WalletServiceServer).AddNewWallet(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.WalletService/AddNewWallet",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WalletServiceServer).AddNewWallet(ctx, req.(*NewWalletRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WalletService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.WalletService",
	HandlerType: (*WalletServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddNewWallet",
			Handler:    _WalletService_AddNewWallet_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "flairs-wallet.proto",
}
